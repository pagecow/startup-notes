{"version":3,"sources":["src/assets/images/logo.png","src/Headers/GlobalHeader.js","src/Footers/GlobalFooter.js","src/screens/AllNotes/AllNotes.js","src/screens/Note/Note.js","src/screens/CreateNote/CreateNote.js","src/Headers/LoginSignupHeader.js","src/screens/LoginSignup/LoginSignup.js","src/AppNavigation/AppNavigation.js","src/AppState/AppState.js","App.js"],"names":["module","exports","GlobalHeader","navigation","AppState","userID","setUserID","setNoteID","setAllNotes","setScreenName","View","style","styles","headerCont","TouchableOpacity","onPress","navigate","Image","logo","source","require","Text","text","name","size","color","AsyncStorage","removeItem","StyleSheet","create","flex","flexDirection","width","paddingLeft","paddingRight","justifyContent","alignItems","backgroundColor","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","paddingTop","StatusBar","currentHeight","fontFamily","fontSize","GlobalFooter","host","noteID","allNotes","setChosenNoteID","screenName","newNoteID","footerCont","a","async","newNote","noteTitle","noteText","setItem","currentNotes","localNotes","JSON","stringify","axios","post","then","res","console","log","catch","err","borderTopWidth","borderTopColor","AllNotes","setNote","forceUpdate","useForceUpdate","useIsFocused","handleDelete","noteObj","allNotesCopy","objIndex","findIndex","obj","splice","screen","body","ScrollView","contentContainerStyle","scrollViewCont","map","e","i","noteCont","deleteButton","Alert","alert","numberOfLines","marginTop","marginBottom","marginLeft","marginRight","padding","borderWidth","borderColor","borderRadius","position","right","top","zIndex","paddingBottom","Dimensions","get","Note","chosenNoteID","note","useState","setNoteTitle","setNoteText","showFooter","setShowFooter","useEffect","handleUpdate","Keyboard","addListener","KeyboardAvoidingView","behavior","Platform","OS","TextInput","placeholder","value","onChangeText","multiline","keyboardShouldPersistTaps","textAlignVertical","saveButtonCont","saveButton","saveButtonText","CreateNote","pointerEvents","LoginSignupHeader","LoginSignup","email","setEmail","password","setPassword","showLogin","setShowLogin","data","notes","note_id","localNoteID","notesParsed","push","parse","siteConstuctionText","headerText","inputs","textContentType","autoCapitalize","secureTextEntry","user_id","localUserID","minHeight","textAlign","margin","Stack","createNativeStackNavigator","AppNavigation","NavigationContainer","Navigator","Screen","options","headerShown","props","useFonts","FredokaOne_400Regular","OpenSans_300Light","OpenSans_400Regular","OpenSans_600SemiBold","OpenSans_700Bold","fontsLoaded","getItem","Number","App","registerNNPushToken"],"mappings":"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","file":"static/js/app.daa035e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b7b2940b.png\";","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nexport default function GlobalHeader({ navigation, AppState }) {\n    const { userID, setUserID, setNoteID, setAllNotes, setScreenName } = AppState;\n\n    const handleLogout = () => {\n        setUserID(0);\n        AsyncStorage.removeItem('@userID');\n        setNoteID(0);\n        AsyncStorage.removeItem('@noteID');\n        setAllNotes([]);\n        AsyncStorage.removeItem('@notes');\n        navigation.navigate('LoginSignup');\n    }\n\n    return (\n        <View style={styles.headerCont}>\n            <TouchableOpacity onPress={() => { navigation.navigate('AllNotes'); setScreenName('AllNotes'); }}>\n                <Image\n                    style={styles.logo}\n                    source={require('../assets/images/logo.png')}\n                />\n            </TouchableOpacity>\n            \n            <Text style={styles.text}>Startup Notes</Text>\n\n            {userID > 0\n                ? <Icon name=\"logout\" size={25} color=\"#141414\" onPress={handleLogout} />\n                : null\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    headerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        paddingLeft: '5%',\n        paddingRight: '5%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        },\n        shadowOpacity: 0.29,\n        shadowRadius: 4.65,\n        elevation: 7,\n        paddingTop: StatusBar.currentHeight,\n    },\n\n    logo: {\n        height:25,\n        width:25\n    },\n    text: {\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 15,\n        color: '#141414',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon2 from 'react-native-vector-icons/Ionicons';\n\nexport default function GlobalFooter({ navigation, AppState }) {\n    const { host, userID, noteID, setNoteID, allNotes, setAllNotes, setChosenNoteID, screenName, setScreenName } = AppState;\n\n    const newNoteID = noteID + 1;\n\n    const handleCreateNote = async () => {\n        const newNote = { noteID: newNoteID, noteTitle: '', noteText: '' };\n\n        await AsyncStorage.setItem('@noteID', `${newNoteID}`);\n        await setChosenNoteID(newNoteID);\n        await setAllNotes((currentNotes) => [newNote, ...currentNotes]);\n        await setNoteID(newNoteID);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n\n        navigation.navigate('CreateNote');\n        setScreenName('CreateNote');\n    }\n\n    const handleGoHome = async () => {\n        navigation.navigate('AllNotes');\n        setScreenName('AllNotes');\n    }\n\n    return (\n        <View style={styles.footerCont}>\n            <Icon \n                name={screenName === 'AllNotes' ? \"notebook\" : \"notebook-outline\"} \n                size={27} \n                color={screenName === 'AllNotes' ? \"#02394A\" : \"#141414\"} \n                onPress={handleGoHome} />\n            <Icon2 \n                name={screenName === 'CreateNote' ? \"md-create\" : \"md-create-outline\"} \n                size={30} \n                color={screenName === 'CreateNote' ? \"#02394A\" : \"#141414\"} \n                onPress={handleCreateNote}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    footerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        borderTopWidth: 0.75,\n        borderTopColor: '#d8d8d8',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView, Alert, Platform } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useForceUpdate from 'use-force-update';\nimport axios from 'axios';\n\nimport GlobalHeader from '../../Headers/GlobalHeader';\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nimport Icon from 'react-native-vector-icons/Feather';\n\nexport default function AllNotes({ navigation, AppState }) {\n    const { host, userID, noteID, allNotes, setAllNotes, setChosenNoteID, setNote, setScreenName } = AppState;\n\n    const forceUpdate = useForceUpdate();\n    useIsFocused();\n\n    const handlePress = async (noteObj) => {\n        await setChosenNoteID(noteObj.noteID);\n        await setNote(noteObj);\n        navigation.navigate('Note');\n        setScreenName('CreateNote');\n    }\n\n    const confirmAlert = (noteObj) => {\n        Alert.alert(\n            \"Wait! Do you want to delete your note forever?\",\n            \"This cannot be undone!\",\n            [\n              {\n                text: \"Cancel\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              { text: \"Yes, delete my note forever\", onPress: () => handleDelete(noteObj) }\n            ]\n        );\n    }\n\n    const handleDelete = async (noteObj) => {\n        console.log(\"handleDelete triggered\");\n        let allNotesCopy = allNotes;\n        let objIndex = allNotes.findIndex((obj => obj.noteID == noteObj.noteID));\n\n        await allNotesCopy.splice(objIndex, 1);\n\n        await setAllNotes(allNotesCopy);\n        \n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n\n        forceUpdate();\n    }\n\n    \n    return (\n        <View style={styles.screen}>\n            <GlobalHeader navigation={navigation} AppState={AppState} />\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont}>\n                    { allNotes.map((e, i) => {\n                        return (\n                            <View key={i} style={styles.noteCont}>\n                                <Icon\n                                    style={styles.deleteButton} \n                                    name=\"x-circle\" \n                                    onPress={() => confirmAlert(e)} \n                                />\n                                <TouchableOpacity  \n                                    onPress={() => handlePress(e)}\n                                >\n                                    <Text \n                                        style={styles.noteTitle}\n                                        numberOfLines={1}\n                                    >{e.noteTitle}</Text>\n                                    <Text \n                                        style={styles.noteText} \n                                        numberOfLines={1}\n                                    >{e.noteText}</Text>\n                                </TouchableOpacity>\n                                \n                            </View>\n                            \n                        )\n                    }) }\n                </ScrollView>\n            </View>\n            <GlobalFooter AppState={AppState} navigation={navigation} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 8,\n        width: '100%',\n        paddingLeft: '2%',\n        paddingRight: '2%',\n        backgroundColor: '#f4f4f4',\n    },\n\n    noteCont: {\n        marginTop: 0,\n        marginBottom: 15,\n        marginLeft: '0.5%',\n        marginRight: '0.5%',\n        padding: 15,\n        backgroundColor: '#fff',\n        borderWidth: 0.75,\n        borderColor: '#d8d8d8',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n        elevation: 2,\n        borderRadius: 8,\n    },\n    deleteButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        zIndex: 10,\n        fontSize: 14,\n        color: '#990000'\n    },\n    noteTitle: {\n        width: '90%',\n        fontFamily: 'OpenSans_600SemiBold',\n        marginBottom: 5,\n        fontSize: 14,\n    },\n    noteText: {\n        fontFamily: 'OpenSans_300Light',\n        marginTop: 2,\n        fontSize: 14,\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 200\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Keyboard, ScrollView, TextInput, KeyboardAvoidingView, Platform, Dimensions, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nconst height = Dimensions.get('window').height;\n\nexport default function Note({ navigation, AppState }) {\n    const { host, userID, noteID, chosenNoteID, note, allNotes, setAllNotes } = AppState;\n    const [noteTitle, setNoteTitle] = useState(note.noteTitle);\n    const [noteText, setNoteText] = useState(note.noteText);\n    const [showFooter, setShowFooter] = useState(true);\n\n    let allNotesCopy = allNotes;\n\n    let objIndex = allNotes.findIndex((obj => obj.noteID == chosenNoteID));\n    console.log(\"Chosen note object: \", allNotes[objIndex]);\n\n    useEffect(() => {\n        handleUpdate();\n\n        Keyboard.addListener(\"keyboardDidShow\", () => setShowFooter(false));\n        Keyboard.addListener(\"keyboardDidHide\", () => setShowFooter(true));\n    })\n\n    const handleUpdate = async () => {\n        console.log(\"Before update: \", allNotes[objIndex]);\n        allNotesCopy[objIndex].noteTitle = noteTitle;\n        allNotesCopy[objIndex].noteText = noteText;\n        console.log(\"After update: \", allNotesCopy[objIndex]);\n\n        await setAllNotes(allNotesCopy);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <KeyboardAvoidingView \n            style={styles.screen}\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n            <TextInput \n                style={styles.noteTitle}\n                placeholder={'Note Title'}\n                value={noteTitle}\n                onChangeText={setNoteTitle}\n                multiline={true}\n            />\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont} keyboardShouldPersistTaps={'always'}>\n                    \n                    <TextInput \n                        style={styles.noteText}\n                        placeholder={'Note Text'}\n                        value={noteText}\n                        onChangeText={setNoteText}\n                        multiline={true}\n                   />\n                </ScrollView>\n            </View>\n            {showFooter ? <GlobalFooter AppState={AppState} navigation={navigation} /> : null}\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingTop: '6%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n    },\n\n    noteTitle: {\n        height: height * 0.10,\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 24,\n        paddingTop: '6%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n    },\n    noteText: {\n        height: height * 0.70,\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 10,\n        fontSize: 16,\n        color: '#000',\n        textAlignVertical: 'top',\n        paddingBottom: 50\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    saveButtonCont: {\n        flex: 1,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        marginTop: 5\n    },\n    saveButton: {\n        backgroundColor: '#02394A',\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Keyboard, ScrollView, TextInput, KeyboardAvoidingView, Platform, Dimensions } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nconst height = Dimensions.get('window').height;\n\nexport default function CreateNote({ navigation, AppState }) {\n    const { host, userID, noteID, chosenNoteID, allNotes, setAllNotes, setScreenName } = AppState;\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteText, setNoteText] = useState('');\n    const [showFooter, setShowFooter] = useState(true);\n\n    let allNotesCopy = allNotes;\n\n    let objIndex = allNotes.findIndex((obj => obj.noteID == chosenNoteID));\n    console.log(\"Chosen note object: \", allNotes[objIndex]);\n\n    useEffect(() => {\n        handleUpdate();\n\n        Keyboard.addListener(\"keyboardDidShow\", () => setShowFooter(false));\n        Keyboard.addListener(\"keyboardDidHide\", () => setShowFooter(true));\n    })\n\n    const handleUpdate = async () => {\n        console.log(\"Before update: \", allNotes[objIndex]);\n        allNotesCopy[objIndex].noteTitle = noteTitle;\n        allNotesCopy[objIndex].noteText = noteText;\n        console.log(\"After update: \", allNotesCopy[objIndex]);\n\n        await setAllNotes(allNotesCopy);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <KeyboardAvoidingView \n            style={styles.screen}\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont} keyboardShouldPersistTaps={'always'}>\n                    <TextInput \n                        style={styles.noteTitle}\n                        placeholder={'Note Title'}\n                        value={noteTitle}\n                        onChangeText={setNoteTitle}\n                        multiline={true}\n                    />\n                    <TextInput \n                        style={styles.noteText}\n                        placeholder={'Note Text'}\n                        value={noteText}\n                        onChangeText={setNoteText}\n                        multiline={true}\n                        pointerEvents=\"none\"\n                   />\n                </ScrollView>\n            </View>\n            {showFooter ? <GlobalFooter AppState={AppState} navigation={navigation} /> : null}\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingTop: '6%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n    },\n\n    noteTitle: {\n        height: height * 0.10,\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 24,\n    },\n    noteText: {\n        height: height * 0.70,\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 10,\n        fontSize: 16,\n        color: '#000',\n        textAlignVertical: 'top',\n        paddingBottom: 50\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    saveButtonCont: {\n        flex: 1,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        marginTop: 5\n    },\n    saveButton: {\n        backgroundColor: '#02394A',\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Icon2 from 'react-native-vector-icons/MaterialIcons';\n\nexport default function LoginSignupHeader({ navigation, AppState }) {\n    const { userID, setUserID, setNoteID, setAllNotes, setScreenName } = AppState;\n\n    const handleLogout = () => {\n        setUserID(0);\n        AsyncStorage.removeItem('@userID');\n        setNoteID(0);\n        AsyncStorage.removeItem('@noteID');\n        setAllNotes([]);\n        AsyncStorage.removeItem('@notes');\n        navigation.navigate('LoginSignup');\n    }\n\n    return (\n        <View style={styles.headerCont}>\n            <Image\n                style={styles.logo}\n                source={require('../assets/images/logo.png')}\n            />\n            \n            <Text style={styles.text}>Startup Notes</Text>\n\n            {userID > 0\n                ? <Icon2 name=\"logout\" size={25} color=\"#141414\" onPress={handleLogout} />\n                : null\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    headerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        paddingLeft: '5%',\n        paddingRight: '5%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        },\n        shadowOpacity: 0.29,\n        shadowRadius: 4.65,\n        elevation: 7,\n        paddingTop: StatusBar.currentHeight,\n    },\n\n    logo: {\n        height:25,\n        width:25\n    },\n    text: {\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 15,\n        color: '#141414',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, TextInput, KeyboardAvoidingView, TouchableOpacity, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalHeader from '../../Headers/LoginSignupHeader';\n\nexport default function LoginSignup({ navigation, AppState }) {\n    const { host, userID, setUserID, setNoteID, setAllNotes } = AppState;\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [showLogin, setShowLogin] = useState(false);\n\n    useEffect(() => {\n        if(userID) {\n            navigation.navigate('AllNotes');\n            axios\n                .post(`${host}/api/user/${userID}`)\n                .then(async (res) => {\n                    console.log(\"res.data: \", res.data, res.data.notes);\n\n                    await setNoteID(res.data.note_id);\n                    let localNoteID = JSON.stringify(res.data.note_id);\n                    await AsyncStorage.setItem('@noteID', localNoteID);\n\n                    let notesParsed = [];\n\n                    for(const note in res.data.notes) {\n                        console.log(\"note: \", res.data.notes[note]);\n                        notesParsed.push(JSON.parse(res.data.notes[note]));\n                    }\n                    console.log(\"notesParsed: \", notesParsed);\n\n                    await setAllNotes(notesParsed);\n                    let localNotes = JSON.stringify(notesParsed);\n                    await AsyncStorage.setItem('@notes', localNotes);\n\n                    navigation.navigate('AllNotes');\n                })\n                .catch(err => console.log(err))\n        }\n    }, [])\n\n    const handleSignup = async () => {\n        axios\n            .post(`${host}/api/auth/register`, { email, password })\n            .then(async (res) => {\n                console.log(\"res.data: \", res.data);\n                \n                await setUserID(res.data.user_id);\n                let localUserID = JSON.stringify(res.data.user_id);\n                await AsyncStorage.setItem('@userID', localUserID);\n\n                await setNoteID(res.data.note_id);\n                let localNoteID = JSON.stringify(res.data.note_id);\n                await AsyncStorage.setItem('@noteID', localNoteID);\n\n                await setAllNotes(res.data.notes);\n                let localNotes = JSON.stringify(res.data.notes);\n                await AsyncStorage.setItem('@notes', localNotes);\n\n                setEmail('');\n                setPassword('');\n\n                navigation.navigate('AllNotes');\n            })\n            .catch(err => {\n                alert(\"Sorry, that email is already in use. Try logging in or registering with another email.\")\n            })\n    }\n\n    const handleLogin = async () => {\n        axios\n            .post(`${host}/api/auth/login`, { email, password })\n            .then(async (res) => {\n                console.log(\"res.data: \", res.data, res.data.notes);\n\n                await setUserID(res.data.user_id);\n                let localUserID = JSON.stringify(res.data.user_id);\n                await AsyncStorage.setItem('@userID', localUserID);\n\n                await setNoteID(res.data.note_id);\n                let localNoteID = JSON.stringify(res.data.note_id);\n                await AsyncStorage.setItem('@noteID', localNoteID);\n\n                let notesParsed = [];\n\n                for(const note in res.data.notes) {\n                    console.log(\"note: \", res.data.notes[note]);\n                    notesParsed.push(JSON.parse(res.data.notes[note]));\n                }\n                console.log(\"notesParsed: \", notesParsed);\n\n                await setAllNotes(notesParsed);\n                let localNotes = JSON.stringify(notesParsed);\n                await AsyncStorage.setItem('@notes', localNotes);\n\n                setEmail('');\n                setPassword('');\n\n                navigation.navigate('AllNotes');\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"Sorry, that email and password did not match out records. Please try again.\")\n            })\n    }\n\n    if(Platform.OS === 'web') {\n        return (\n            <View style={styles.screen}>\n                <Text style={styles.siteConstuctionText}>Site is under construction.</Text>\n                <Text style={styles.siteConstuctionText}>You can find the Startup Notes app on the Apple App Store or the Google Play Store.</Text>\n                <Text style={styles.siteConstuctionText}>If you have any questions, please email: tj@nativenotify.com</Text>\n            </View>\n        )\n    } else {\n        return (\n            <KeyboardAvoidingView\n                style={styles.screen}\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            >\n                <GlobalHeader navigation={navigation} AppState={AppState} />\n                <View style={styles.body}>\n                    {showLogin ? <Text style={styles.headerText}></Text> : <Text style={styles.headerText}>Sign up to automatically save your notes to the cloud. Automatically sync and access your files across devices.</Text>}\n                    <TextInput\n                        style={styles.inputs}\n                        placeholder={'Email'}\n                        value={email}\n                        onChangeText={setEmail}\n                        textContentType={'emailAddress'}\n                        autoCapitalize=\"none\"\n                    />\n                    <TextInput\n                        style={styles.inputs}\n                        placeholder={'Password'}\n                        value={password}\n                        onChangeText={setPassword}\n                        secureTextEntry={true}\n                    />\n                    {showLogin \n                        ? <TouchableOpacity style={styles.saveButton} onPress={handleLogin}>\n                            <Text style={styles.saveButtonText}>Login</Text>\n                          </TouchableOpacity> \n                        : <TouchableOpacity style={styles.saveButton} onPress={handleSignup}>\n                            <Text style={styles.saveButtonText}>Sign Up</Text>\n                          </TouchableOpacity>\n                    }\n                    \n                    <TouchableOpacity onPress={() => {\n                        setShowLogin(!showLogin);\n                        setEmail('');\n                        setPassword('');\n                    }}>\n                        <Text style={styles.text}>{showLogin ? \"Don't have an account yet? Tap here to Sign up.\" : \"Already have an account? Tap here to Log In.\"}</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n        );\n    }\n\n    \n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        alignItems: 'center',\n        backgroundColor: '#f4f4f4',\n    },\n\n    headerText: {\n        height: '25%',\n        minHeight: 100,\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 18,\n        marginTop: 30,\n        textAlign: 'center',\n    },\n    inputs: {\n        width: '100%',\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 14,\n        padding: 10,\n        backgroundColor: '#fff',\n        borderWidth: 0.75,\n        borderColor: '#d8d8d8',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n        elevation: 2,\n        borderRadius: 8,\n        marginBottom: 10\n    },\n    password: {\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 10,\n        fontSize: 16,\n        color: '#000'\n    },\n    saveButton: {\n        width: '100%',\n        backgroundColor: '#02394A',\n        marginTop: 5,\n        marginBottom: 15,\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    },\n    text: {\n        fontFamily: 'OpenSans_400Regular',\n    },\n    siteConstuctionText: {\n        fontSize: 20,\n        margin: 20,\n        textAlign: 'center',\n    }\n});","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport AllNotes from '../screens/AllNotes/AllNotes';\nimport Note from '../screens/Note/Note';\nimport CreateNote from '../screens/CreateNote/CreateNote';\nimport LoginSignup from '../screens/LoginSignup/LoginSignup';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function AppNavigation({ AppState }) {\n    return (\n        <NavigationContainer>\n          <Stack.Navigator>\n\n            <Stack.Screen name=\"LoginSignup\" options={{ headerShown: false }}>\n                {props => <LoginSignup {...props} AppState={AppState} />}\n            </Stack.Screen>\n\n            <Stack.Screen name=\"AllNotes\" options={{ headerShown: false }}>\n                {props => <AllNotes {...props} AppState={AppState} />}\n            </Stack.Screen>\n            <Stack.Screen name=\"Note\" options={{ headerShown: false }}>\n                {props => <Note {...props} AppState={AppState} />}\n            </Stack.Screen>\n            <Stack.Screen name=\"CreateNote\" options={{ headerShown: false }}>\n                {props => <CreateNote {...props} AppState={AppState} />}\n            </Stack.Screen>\n\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n}","import React, { useState, useEffect } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, FredokaOne_400Regular } from '@expo-google-fonts/fredoka-one';\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold, OpenSans_700Bold } from '@expo-google-fonts/open-sans';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport AppNavigation from '../AppNavigation/AppNavigation';\n\nexport default function AppState() {\n    const host = 'https://startupnotes.app';\n\n    const [userID, setUserID] = useState(0);\n\n    const [noteID, setNoteID] = useState(0);\n    const [allNotes, setAllNotes] = useState([]);\n    const [note, setNote] = useState({});\n    const [chosenNoteID, setChosenNoteID] = useState(0);\n\n    const [screenName, setScreenName] = useState('AllNotes');\n\n    const AppState = {\n        host,\n        userID, setUserID,\n        noteID, setNoteID,\n        allNotes, setAllNotes,\n        note, setNote,\n        chosenNoteID, setChosenNoteID,\n        screenName, setScreenName\n    };\n\n    let [fontsLoaded] = useFonts({\n        FredokaOne_400Regular, OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold, OpenSans_700Bold\n    });\n\n    useEffect(async () => {\n        try {\n            const localUserID = await AsyncStorage.getItem('@userID');\n            console.log(\"localUserID: \", localUserID);\n            if(localUserID !== null) {\n                setUserID(Number(localUserID));\n            } \n        } catch(e) {\n            console.log(e);\n        }\n    }, []);\n\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    } else {\n        return <AppNavigation AppState={AppState} />\n    }\n}","import AppState from './src/AppState/AppState';\nimport registerNNPushToken from 'native-notify';\n\nexport default function App() {\n  registerNNPushToken(2322, 'm2Z4KJEpmg7R91AkqQpCru');\n  \n  return <AppState />;\n}"],"sourceRoot":""}