{"version":3,"sources":["src/assets/images/logo.png","src/Headers/GlobalHeader.js","src/Footers/GlobalFooter.js","src/screens/AllNotes/AllNotes.js","src/screens/Note/Note.js","src/screens/CreateNote/CreateNote.js","src/Headers/LoginSignupHeader.js","src/screens/LoginSignup/LoginSignup.js","src/AppNavigation/AppNavigation.js","src/AppState/AppState.js","App.js"],"names":["module","exports","GlobalHeader","navigation","AppState","userID","setUserID","setNoteID","setAllNotes","setScreenName","View","style","styles","headerCont","TouchableOpacity","onPress","navigate","Image","logo","source","require","Text","text","name","size","color","AsyncStorage","removeItem","StyleSheet","create","flex","flexDirection","width","paddingLeft","paddingRight","justifyContent","alignItems","backgroundColor","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","paddingTop","StatusBar","currentHeight","fontFamily","fontSize","GlobalFooter","noteID","allNotes","setChosenNoteID","screenName","newNoteID","footerCont","a","async","newNote","noteTitle","noteText","setItem","currentNotes","localNotes","JSON","stringify","borderTopWidth","borderTopColor","AllNotes","setNote","forceUpdate","useForceUpdate","useIsFocused","useEffect","console","log","handleDelete","noteObj","allNotesCopy","objIndex","findIndex","obj","splice","axios","post","host","then","res","catch","err","screen","body","ScrollView","contentContainerStyle","scrollViewCont","map","e","i","noteCont","deleteButton","Alert","alert","numberOfLines","marginTop","marginBottom","marginLeft","marginRight","padding","borderWidth","borderColor","borderRadius","position","right","top","zIndex","paddingBottom","Note","chosenNoteID","note","useState","setNoteTitle","setNoteText","showFooter","setShowFooter","handleUpdate","Keyboard","addListener","KeyboardAvoidingView","behavior","Platform","OS","TextInput","placeholder","value","onChangeText","multiline","saveButtonCont","saveButton","saveButtonText","CreateNote","LoginSignupHeader","LoginSignup","email","setEmail","password","setPassword","showLogin","setShowLogin","siteConstuctionText","headerText","inputs","data","user_id","note_id","notes","localUserID","localNoteID","textAlign","margin","Stack","createNativeStackNavigator","AppNavigation","NavigationContainer","Navigator","Screen","options","headerShown","props","useFonts","FredokaOne_400Regular","OpenSans_300Light","OpenSans_400Regular","OpenSans_600SemiBold","OpenSans_700Bold","fontsLoaded","getItem","Number","parse","App","registerNNPushToken"],"mappings":"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","file":"static/js/app.924cdfff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b7b2940b.png\";","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nexport default function GlobalHeader({ navigation, AppState }) {\n    const { userID, setUserID, setNoteID, setAllNotes, setScreenName } = AppState;\n\n    const handleLogout = () => {\n        setUserID(0);\n        AsyncStorage.removeItem('@userID');\n        setNoteID(0);\n        AsyncStorage.removeItem('@noteID');\n        setAllNotes([]);\n        AsyncStorage.removeItem('@notes');\n        navigation.navigate('LoginSignup');\n    }\n\n    return (\n        <View style={styles.headerCont}>\n            <TouchableOpacity onPress={() => { navigation.navigate('AllNotes'); setScreenName('AllNotes'); }}>\n                <Image\n                    style={styles.logo}\n                    source={require('../assets/images/logo.png')}\n                />\n            </TouchableOpacity>\n            \n            <Text style={styles.text}>Startup Notes</Text>\n\n            {userID > 0\n                ? <Icon name=\"logout\" size={25} color=\"#141414\" onPress={handleLogout} />\n                : null\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    headerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        paddingLeft: '5%',\n        paddingRight: '5%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        },\n        shadowOpacity: 0.29,\n        shadowRadius: 4.65,\n        elevation: 7,\n        paddingTop: StatusBar.currentHeight,\n    },\n\n    logo: {\n        height:25,\n        width:25\n    },\n    text: {\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 15,\n        color: '#141414',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Icon2 from 'react-native-vector-icons/Ionicons';\n\nexport default function GlobalFooter({ navigation, AppState }) {\n    const { noteID, setNoteID, allNotes, setAllNotes, setChosenNoteID, screenName, setScreenName } = AppState;\n\n    const newNoteID = noteID + 1;\n\n    const handleCreateNote = async () => {\n        const newNote = { noteID: newNoteID, noteTitle: '', noteText: '' };\n\n        await AsyncStorage.setItem('@noteID', `${newNoteID}`);\n        await setChosenNoteID(newNoteID);\n        await setAllNotes((currentNotes) => [newNote, ...currentNotes]);\n        await setNoteID(newNoteID);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        navigation.navigate('CreateNote');\n        setScreenName('CreateNote');\n    }\n\n    const handleGoHome = async () => {\n        navigation.navigate('AllNotes');\n        setScreenName('AllNotes');\n    }\n\n    return (\n        <View style={styles.footerCont}>\n            <Icon \n                name={screenName === 'AllNotes' ? \"notebook\" : \"notebook-outline\"} \n                size={27} \n                color={screenName === 'AllNotes' ? \"#02394A\" : \"#141414\"} \n                onPress={handleGoHome} />\n            <Icon2 \n                name={screenName === 'CreateNote' ? \"md-create\" : \"md-create-outline\"} \n                size={30} \n                color={screenName === 'CreateNote' ? \"#02394A\" : \"#141414\"} \n                onPress={handleCreateNote}/>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    footerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        borderTopWidth: 0.75,\n        borderTopColor: '#d8d8d8',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, ScrollView, Alert, Platform } from 'react-native';\nimport { useIsFocused } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useForceUpdate from 'use-force-update';\nimport axios from 'axios';\n\nimport GlobalHeader from '../../Headers/GlobalHeader';\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nimport Icon from 'react-native-vector-icons/Feather';\n\nexport default function AllNotes({ navigation, AppState }) {\n    const { userID, noteID, allNotes, setAllNotes, setChosenNoteID, setNote } = AppState;\n\n    const forceUpdate = useForceUpdate();\n    useIsFocused();\n\n    useEffect(() => {\n        console.log(\"useEffect triggered\");\n    }, [allNotes])\n\n    const handlePress = async (noteObj) => {\n        await setChosenNoteID(noteObj.noteID);\n        await setNote(noteObj);\n        navigation.navigate('Note');\n    }\n\n    const confirmAlert = (noteObj) => {\n        Alert.alert(\n            \"Wait! Do you want to delete your note forever?\",\n            \"This cannot be undone!!!\",\n            [\n              {\n                text: \"Cancel\",\n                onPress: () => console.log(\"Cancel Pressed\"),\n                style: \"cancel\"\n              },\n              { text: \"Yes, delete my note forever\", onPress: () => handleDelete(noteObj) }\n            ]\n        );\n    }\n\n    const handleDelete = async (noteObj) => {\n        console.log(\"handleDelete triggered\");\n        let allNotesCopy = allNotes;\n        let objIndex = allNotes.findIndex((obj => obj.noteID == noteObj.noteID));\n\n        await allNotesCopy.splice(objIndex, 1);\n\n        await setAllNotes(allNotesCopy);\n        \n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n\n        forceUpdate();\n    }\n\n    \n    return (\n        <View style={styles.screen}>\n            <GlobalHeader navigation={navigation} AppState={AppState} />\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont}>\n                    { allNotes.map((e, i) => {\n                        return (\n                            <View key={i} style={styles.noteCont}>\n                                <Icon\n                                    style={styles.deleteButton} \n                                    name=\"x-circle\" \n                                    onPress={() => confirmAlert(e)} \n                                />\n                                <TouchableOpacity  \n                                    onPress={() => handlePress(e)}\n                                >\n                                    <Text \n                                        style={styles.noteTitle}\n                                        numberOfLines={1}\n                                    >{e.noteTitle}</Text>\n                                    <Text \n                                        style={styles.noteText} \n                                        numberOfLines={1}\n                                    >{e.noteText}</Text>\n                                </TouchableOpacity>\n                                \n                            </View>\n                            \n                        )\n                    }) }\n                </ScrollView>\n            </View>\n            <GlobalFooter AppState={AppState} navigation={navigation} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 8,\n        width: '100%',\n        paddingLeft: '2%',\n        paddingRight: '2%',\n        backgroundColor: '#f4f4f4',\n    },\n\n    noteCont: {\n        marginTop: 0,\n        marginBottom: 15,\n        marginLeft: '0.5%',\n        marginRight: '0.5%',\n        padding: 15,\n        backgroundColor: '#fff',\n        borderWidth: 0.75,\n        borderColor: '#d8d8d8',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n        elevation: 2,\n        borderRadius: 8,\n    },\n    deleteButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        zIndex: 10,\n        fontSize: 14,\n        color: '#990000'\n    },\n    noteTitle: {\n        width: '90%',\n        fontFamily: 'OpenSans_600SemiBold',\n        marginBottom: 5,\n        fontSize: 14,\n    },\n    noteText: {\n        fontFamily: 'OpenSans_300Light',\n        marginTop: 2,\n        fontSize: 14,\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 200\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Keyboard, ScrollView, TextInput, KeyboardAvoidingView, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nexport default function Note({ navigation, AppState }) {\n    const { userID, noteID, chosenNoteID, note, allNotes, setAllNotes } = AppState;\n    const [noteTitle, setNoteTitle] = useState(note.noteTitle);\n    const [noteText, setNoteText] = useState(note.noteText);\n    const [showFooter, setShowFooter] = useState(true);\n\n    let allNotesCopy = allNotes;\n\n    let objIndex = allNotes.findIndex((obj => obj.noteID == chosenNoteID));\n    console.log(\"Chosen note object: \", allNotes[objIndex]);\n\n    useEffect(() => {\n        handleUpdate();\n\n        Keyboard.addListener(\"keyboardDidShow\", () => setShowFooter(false));\n        Keyboard.addListener(\"keyboardDidHide\", () => setShowFooter(true));\n    })\n\n    const handleUpdate = async () => {\n        console.log(\"Before update: \", allNotes[objIndex]);\n        allNotesCopy[objIndex].noteTitle = noteTitle;\n        allNotesCopy[objIndex].noteText = noteText;\n        console.log(\"After update: \", allNotesCopy[objIndex]);\n\n        await setAllNotes(allNotesCopy);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <KeyboardAvoidingView \n            style={styles.screen}\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont}>\n                    <TextInput \n                        style={styles.noteTitle}\n                        placeholder={'Note Title'}\n                        value={noteTitle}\n                        onChangeText={setNoteTitle}\n                        multiline={true}\n                    />\n                    <TextInput \n                        style={styles.noteText}\n                        placeholder={'Note Text'}\n                        value={noteText}\n                        onChangeText={setNoteText}\n                        multiline={true}\n                   />\n                </ScrollView>\n            </View>\n            {showFooter ? <GlobalFooter AppState={AppState} navigation={navigation} /> : null}\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingTop: '6%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n    },\n\n    noteTitle: {\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 24,\n    },\n    noteText: {\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 10,\n        fontSize: 16,\n        color: '#000',\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    saveButtonCont: {\n        flex: 1,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        marginTop: 5\n    },\n    saveButton: {\n        backgroundColor: '#02394A',\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Keyboard, ScrollView, TextInput, KeyboardAvoidingView, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalFooter from '../../Footers/GlobalFooter';\n\nexport default function CreateNote({ navigation, AppState }) {\n    const { userID, noteID, chosenNoteID, allNotes, setAllNotes } = AppState;\n    const [noteTitle, setNoteTitle] = useState('');\n    const [noteText, setNoteText] = useState('');\n    const [showFooter, setShowFooter] = useState(true);\n\n    let allNotesCopy = allNotes;\n\n    let objIndex = allNotes.findIndex((obj => obj.noteID == chosenNoteID));\n    console.log(\"Chosen note object: \", allNotes[objIndex]);\n\n    useEffect(() => {\n        handleUpdate();\n\n        Keyboard.addListener(\"keyboardDidShow\", () => setShowFooter(false));\n        Keyboard.addListener(\"keyboardDidHide\", () => setShowFooter(true));\n    })\n\n    const handleUpdate = async () => {\n        console.log(\"Before update: \", allNotes[objIndex]);\n        allNotesCopy[objIndex].noteTitle = noteTitle;\n        allNotesCopy[objIndex].noteText = noteText;\n        console.log(\"After update: \", allNotesCopy[objIndex]);\n\n        await setAllNotes(allNotesCopy);\n\n        let localNotes = JSON.stringify(allNotes);\n        await AsyncStorage.setItem('@notes', localNotes);\n\n        axios\n            .post(`${host}/api/notes`, { userID, noteID, allNotes })\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <KeyboardAvoidingView \n            style={styles.screen}\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n            <View style={styles.body}>\n                <ScrollView contentContainerStyle={styles.scrollViewCont}>\n                    <TextInput \n                        style={styles.noteTitle}\n                        placeholder={'Note Title'}\n                        value={noteTitle}\n                        onChangeText={setNoteTitle}\n                        multiline={true}\n                    />\n                    <TextInput \n                        style={styles.noteText}\n                        placeholder={'Note Text'}\n                        value={noteText}\n                        onChangeText={setNoteText}\n                        multiline={true}\n                   />\n                </ScrollView>\n            </View>\n            {showFooter ? <GlobalFooter AppState={AppState} navigation={navigation} /> : null}\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingTop: '6%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n    },\n\n    noteTitle: {\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 24\n    },\n    noteText: {\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 20,\n        fontSize: 16,\n        color: '#000'\n    },\n    scrollViewCont: {\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    saveButtonCont: {\n        flex: 1,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        marginTop: 5\n    },\n    saveButton: {\n        backgroundColor: '#02394A',\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image, StatusBar } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport Icon2 from 'react-native-vector-icons/MaterialIcons';\n\nexport default function LoginSignupHeader({ navigation, AppState }) {\n    const { userID, setUserID, setNoteID, setAllNotes, setScreenName } = AppState;\n\n    const handleLogout = () => {\n        setUserID(0);\n        AsyncStorage.removeItem('@userID');\n        setNoteID(0);\n        AsyncStorage.removeItem('@noteID');\n        setAllNotes([]);\n        AsyncStorage.removeItem('@notes');\n        navigation.navigate('LoginSignup');\n    }\n\n    return (\n        <View style={styles.headerCont}>\n            <Image\n                style={styles.logo}\n                source={require('../assets/images/logo.png')}\n            />\n            \n            <Text style={styles.text}>Startup Notes</Text>\n\n            {userID > 0\n                ? <Icon2 name=\"logout\" size={25} color=\"#141414\" onPress={handleLogout} />\n                : null\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    headerCont: {\n        flex: 1,\n        flexDirection: 'row',\n        width: '100%',\n        paddingLeft: '5%',\n        paddingRight: '5%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        },\n        shadowOpacity: 0.29,\n        shadowRadius: 4.65,\n        elevation: 7,\n        paddingTop: StatusBar.currentHeight,\n    },\n\n    logo: {\n        height:25,\n        width:25\n    },\n    text: {\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 15,\n        color: '#141414',\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, TextInput, KeyboardAvoidingView, TouchableOpacity, Platform } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\n\nimport GlobalHeader from '../../Headers/LoginSignupHeader';\n\nexport default function LoginSignup({ navigation, AppState }) {\n    const { host, userID, setUserID, setNoteID, setAllNotes } = AppState;\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [showLogin, setShowLogin] = useState(false);\n\n    useEffect(() => {\n        if(userID) {\n            navigation.navigate('AllNotes');\n        }\n    })\n\n    const handleSignup = async () => {\n        axios\n            .post(`${host}/api/auth/register`, { email, password })\n            .then(async (res) => {\n                await setUserID(res.data.user_id);\n                await setNoteID(res.data.note_id);\n                await setAllNotes(res.data.notes);\n\n                let localUserID = JSON.stringify(userID);\n                await AsyncStorage.setItem('@userID', localUserID);\n                let localNoteID = JSON.stringify(noteID);\n                await AsyncStorage.setItem('@noteID', localNoteID);\n                let localNotes = JSON.stringify(allNotes);\n                await AsyncStorage.setItem('@notes', localNotes);\n\n                navigation.navigate('AllNotes');\n            })\n            .catch(err => {\n                alert(\"Sorry, that email is already in use. Try logging in or registering with another email.\")\n            })\n    }\n\n    const handleLogin = async () => {\n        axios\n            .post(`${host}/api/auth/login`, { email, password })\n            .then(async (res) => {\n                await setUserID(res.data.user_id);\n                await setNoteID(res.data.note_id);\n                await setAllNotes(res.data.notes);\n\n                let localUserID = JSON.stringify(userID);\n                await AsyncStorage.setItem('@userID', localUserID);\n                let localNoteID = JSON.stringify(noteID);\n                await AsyncStorage.setItem('@noteID', localNoteID);\n                let localNotes = JSON.stringify(allNotes);\n                await AsyncStorage.setItem('@notes', localNotes);\n\n                navigation.navigate('AllNotes');\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"Sorry, that email and password did not match out records. Please try again.\")\n            })\n    }\n\n    if(Platform.OS === 'web') {\n        return (\n            <View style={styles.screen}>\n                <Text style={styles.siteConstuctionText}>Site is under construction.</Text>\n                <Text style={styles.siteConstuctionText}>You can find the Startup Notes app on the Apple App Store or the Google Play Store.</Text>\n                <Text style={styles.siteConstuctionText}>If you have any questions, please email: tj@nativenotify.com</Text>\n            </View>\n        )\n    } else {\n        return (\n            <KeyboardAvoidingView\n                style={styles.screen}\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n            >\n                <GlobalHeader navigation={navigation} AppState={AppState} />\n                <View style={styles.body}>\n                    {showLogin ? <Text style={styles.headerText}></Text> : <Text style={styles.headerText}>Sign up to automatically save your notes to the cloud. Automatically sync and access your files across devices.</Text>}\n                    <TextInput\n                        style={styles.inputs}\n                        placeholder={'Email'}\n                        value={email}\n                        onChangeText={setEmail}\n                        multiline={true}\n                    />\n                    <TextInput\n                        style={styles.inputs}\n                        placeholder={'Password'}\n                        value={password}\n                        onChangeText={setPassword}\n                        multiline={true}\n                    />\n                    {showLogin \n                        ? <TouchableOpacity style={styles.saveButton} onPress={handleLogin}>\n                            <Text style={styles.saveButtonText}>Login</Text>\n                          </TouchableOpacity> \n                        : <TouchableOpacity style={styles.saveButton} onPress={handleSignup}>\n                            <Text style={styles.saveButtonText}>Sign Up</Text>\n                          </TouchableOpacity>\n                    }\n                    \n                    \n                    <TouchableOpacity onPress={() => setShowLogin(!showLogin)}>\n                        <Text style={styles.text}>{showLogin ? \"Don't have an account yet? Tap here to Sign up.\" : \"Already have an account? Tap here to Log In.\"}</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n        );\n    }\n\n    \n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        alignItems: 'center',\n        backgroundColor: '#fff'\n    },\n    body: {\n        flex: 9,\n        width: '100%',\n        paddingLeft: '6%',\n        paddingRight: '6%',\n        alignItems: 'center',\n        backgroundColor: '#f4f4f4',\n    },\n\n    headerText: {\n        height: '20%',\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 18,\n        marginTop: 30,\n        textAlign: 'center'\n    },\n    inputs: {\n        width: '100%',\n        fontFamily: 'OpenSans_700Bold',\n        fontSize: 14,\n        padding: 10,\n        backgroundColor: '#fff',\n        borderWidth: 0.75,\n        borderColor: '#d8d8d8',\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n        elevation: 2,\n        borderRadius: 8,\n        marginBottom: 10\n    },\n    password: {\n        fontFamily: 'OpenSans_400Regular',\n        marginTop: 10,\n        fontSize: 16,\n        color: '#000'\n    },\n    saveButton: {\n        width: '100%',\n        backgroundColor: '#02394A',\n        marginTop: 5,\n        marginBottom: 15,\n        padding: 15,\n        alignItems: 'center',\n        borderRadius: 8,\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 4,\n    },\n    saveButtonText: {\n        color: '#fff',\n        fontFamily: 'FredokaOne_400Regular',\n        fontSize: 16\n    },\n    text: {\n        fontFamily: 'OpenSans_400Regular',\n    },\n    siteConstuctionText: {\n        fontSize: 20,\n        margin: 20,\n        textAlign: 'center',\n    }\n});","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport AllNotes from '../screens/AllNotes/AllNotes';\nimport Note from '../screens/Note/Note';\nimport CreateNote from '../screens/CreateNote/CreateNote';\nimport LoginSignup from '../screens/LoginSignup/LoginSignup';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function AppNavigation({ AppState }) {\n    return (\n        <NavigationContainer>\n          <Stack.Navigator>\n\n            <Stack.Screen name=\"LoginSignup\" options={{ headerShown: false }}>\n                {props => <LoginSignup {...props} AppState={AppState} />}\n            </Stack.Screen>\n\n            <Stack.Screen name=\"AllNotes\" options={{ headerShown: false }}>\n                {props => <AllNotes {...props} AppState={AppState} />}\n            </Stack.Screen>\n            <Stack.Screen name=\"Note\" options={{ headerShown: false }}>\n                {props => <Note {...props} AppState={AppState} />}\n            </Stack.Screen>\n            <Stack.Screen name=\"CreateNote\" options={{ headerShown: false }}>\n                {props => <CreateNote {...props} AppState={AppState} />}\n            </Stack.Screen>\n\n          </Stack.Navigator>\n        </NavigationContainer>\n      );\n}","import React, { useState, useEffect } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, FredokaOne_400Regular } from '@expo-google-fonts/fredoka-one';\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold, OpenSans_700Bold } from '@expo-google-fonts/open-sans';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport AppNavigation from '../AppNavigation/AppNavigation';\n\nexport default function AppState() {\n    const host = 'https://startupnotes.app';\n\n    const [userID, setUserID] = useState(0);\n\n    const [noteID, setNoteID] = useState(0);\n    const [allNotes, setAllNotes] = useState([]);\n    const [note, setNote] = useState({});\n    const [chosenNoteID, setChosenNoteID] = useState(0);\n\n    const [screenName, setScreenName] = useState('AllNotes');\n\n    const AppState = {\n        host,\n        userID, setUserID,\n        noteID, setNoteID,\n        allNotes, setAllNotes,\n        note, setNote,\n        chosenNoteID, setChosenNoteID,\n        screenName, setScreenName\n    };\n\n    let [fontsLoaded] = useFonts({\n        FredokaOne_400Regular, OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold, OpenSans_700Bold\n    });\n\n    useEffect(async () => {\n        try {\n            const localUserID = await AsyncStorage.getItem('@userID');\n            console.log(\"localUserID: \", localUserID);\n            if(localUserID !== null) {\n                setUserID(Number(localUserID));\n            } else {\n                await AsyncStorage.setItem('@userID', '0');\n            }\n\n            const localNoteID = await AsyncStorage.getItem('@noteID');\n            console.log(\"localNoteID: \", localNoteID);\n            if(localNoteID !== null) {\n                setNoteID(Number(localNoteID));\n            } else {\n                await AsyncStorage.setItem('@noteID', '0');\n            }\n\n            const localNotes = await AsyncStorage.getItem('@notes');\n            console.log(\"localNotes: \", localNotes);\n            if(localNotes !== null) {\n                setAllNotes(JSON.parse(localNotes));\n            }\n        } catch(e) {\n            console.log(e);\n        }\n    }, []);\n\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    } else {\n        return <AppNavigation AppState={AppState} />\n    }\n}","import AppState from './src/AppState/AppState';\nimport registerNNPushToken from 'native-notify';\n\nexport default function App() {\n  registerNNPushToken(2322, 'm2Z4KJEpmg7R91AkqQpCru');\n  \n  return <AppState />;\n}"],"sourceRoot":""}